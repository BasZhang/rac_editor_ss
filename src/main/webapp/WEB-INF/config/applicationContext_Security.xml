<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- 启用注解方式对方法的权限控制 -->
	<security:global-method-security
		pre-post-annotations="enabled" secured-annotations="enabled"
		jsr250-annotations="enabled" proxy-target-class="true">
		<!--		<security:protect-pointcut access="DEV"-->
		<!--			expression="execution(* com.ourpalm.controller.*.*(..))" />-->
	</security:global-method-security>

	<!--
		use-expressions="true" 的意思是开启表达式
		access-denied-page的意思是，当验证权限失败后会跳转到的页面
	-->
	<security:http use-expressions="true" access-denied-page="/error-denied.jsp"
		entry-point-ref="authenticationProcessingFilterEntryPoint">
		<security:intercept-url pattern="/index.jsp*"
			access="hasRole('COMM')" />

		<!-- 使用自己的过滤器 -->
		<!-- 下面的配置表示将自己的过滤器放在FORM_LOGIN_FILTER过滤链的最前面（可以这样来验证登录验证码） -->
		<security:custom-filter ref="validateCodeAuthenticationFilter"
			position="FORM_LOGIN_FILTER" />

		<!-- 退出配置 -->
		<security:logout invalidate-session="true"
			logout-success-url="/login.jsp" logout-url="/auth/logout" />

	</security:http>


	<bean id="authenticationProcessingFilterEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/login.jsp"></property>
	</bean>

	<!-- 验证码过滤器 -->
	<bean id="validateCodeAuthenticationFilter"
		class="com.ourpalm.editor.interceptor.VolidateAuthCodeUsernamePasswordAuthenticationFilter">
		<property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler"></property>
		<property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler"></property>
		<property name="authenticationManager" ref="authenticationManager"></property>
	</bean>

	<!-- 登录成功 -->
	<bean id="loginLogAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/index.jsp"></property>
	</bean>

	<!-- 登录失败 -->
	<bean id="simpleUrlAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/login.jsp?error=true"></property>
	</bean>

	<bean id="jdbcUserService"
		class="org.springframework.security.provisioning.JdbcUserDetailsManager">
		<property name="dataSource" ref="dataSource" />
<!-- 		<property name="authenticationManager"    -->
<!--             ref="authenticationManager"/>   -->
	</bean>
	<!-- 配置一个认证管理器 -->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			user-service-ref="jdbcUserService">
			<security:password-encoder hash="md5">
				<security:salt-source user-property="username"/> 
			</security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>


</beans>
