<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc    
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<context:component-scan base-package="com.ourpalm.editor" />

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>WEB-INF/config/z.properties</value>
				<value>WEB-INF/config/database.properties</value>
			</list>
		</property>
	</bean>

	<mvc:annotation-driven validator="validator">
		<mvc:message-converters register-defaults="true">
			<bean
				class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			<!-- fastjosn spring support -->
			<bean id="jsonConverter"
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes" value="application/json" />
				<property name="features">
					<list>
						<value>WriteMapNullValue</value>
						<value>QuoteFieldNames</value>
					</list>
				</property>
			</bean>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg name="defaultCharset" value="UTF-8"/>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<mvc:resources location="/res/" mapping="/res/**" />
	<mvc:resources location="/res/favicon.ico" mapping="/favicon.ico" />

	<mvc:default-servlet-handler />

	<mvc:interceptors>
		<bean class="com.ourpalm.editor.interceptor.LockTableInterceptor" />
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
		<!-- 解决延迟加载 -->
		<bean
			class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor">
			<property name="entityManagerFactory">
				<ref bean="entityManagerFactory" />
			</property>
		</bean>
	</mvc:interceptors>

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="-1"/>
	</bean>
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<!-- 定义默认的异常处理页面，当该异常类型的注册时使用 -->
		<property name="defaultErrorView" value="error"></property>
		<!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception -->
		<property name="exceptionAttribute" value="ex"></property>
		<!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 -->
		<property name="exceptionMappings">
			<props>
				<prop key="com.ourpalm.editor.exception.ParameterException">error-parameter</prop>
			</props>
		</property>
		<!-- 相关状态码对应的错误页面 -->
		<property name="statusCodes">
			<props>
				<prop key="500">500</prop>
				<prop key="404">404</prop>
			</props>
		</property>
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="WARN" />
		<!-- 默认HTTP状态码 -->
		<property name="defaultStatusCode" value="500" />
	</bean>



	<!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<!-- 国际化的消息资源文件 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找  -->
				<value>classpath:messages</value>
			</list>
		</property>
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="60" />
	</bean>
	
	<!--RMI客户端--> 
	<bean class="org.springframework.jmx.access.MBeanProxyFactoryBean"
		lazy-init="true">
		<property name="objectName" value="${rmi_objectName}" />
		<property name="proxyInterface" value="com.ourpalm.jmx.RacingGmServiceMBean" />
		<property name="serviceUrl" value="${rmi_serviceUrl}" />
		<property name="refreshOnConnectFailure" value="true" />
		<property name="connectOnStartup" value="false" />
	</bean>
	
	<!-- Mail -->
	<bean id="mail"
        class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <!-- SMTP发送邮件的服务器的IP和端口 -->
        <property name="host" value="${mail.host}" />
        <property name="port" value="${mail.port}" />

        <!-- 登陆SMTP邮件发送服务器的用户名和密码 -->
        <property name="username" value="${mail.username}" />
        <property name="password" value="${mail.password}" />

        <!-- 获得邮件会话属性,验证登录邮件服务器是否成功-->
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="prop">true</prop>
                <prop key="mail.smtp.timeout">25000</prop>
            </props>
        </property>
    </bean>
</beans>
